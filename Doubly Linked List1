#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)
typedef int element;
typedef struct DListNode {
	element data;
	struct DListNode *llink;
	struct DListNode *rlink;
}DListNode;
void init(DListNode *head) {
	head->llink = head;
	head->rlink = head;
}
void dinsert(DListNode *before, element data) {
	DListNode *new_node = (DListNode *)malloc(sizeof(DListNode));
	new_node->data=data;
	new_node->llink = before;
	new_node->rlink = before->rlink;
	before->rlink->llink = new_node;
	before->rlink = new_node;
}
void ddelete(DListNode *head, DListNode *removed) {
	if (removed == head)
		return;
	removed->llink->rlink = removed->rlink;
	removed->rlink->llink = removed->llink;
	free(removed);
}
void print_dlist(DListNode *head) {
	DListNode *p;
	for (p = head->rlink; p != head; p = p->rlink) {
		printf("<-|%d|->", p->data);
	}
	printf("\n");
}
int main(void) {
	DListNode *head = (DListNode *)malloc(sizeof(DListNode));
	init(head);
	for (int i = 0; i < 5; i++) {
		dinsert(head, i);
		print_dlist(head);
	}
	printf("\n삭제단계\n");
	for (int i = 0; i < 5; i++) {
		print_dlist(head);
		ddelete(head, head->rlink);
	}
	free(head);
}
