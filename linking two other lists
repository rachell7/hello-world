#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)
typedef int element;
typedef struct ListNode {
	element data;
	struct ListNode *link;
}ListNode;
ListNode *insert_first(ListNode *head, element value) {
	ListNode *p = (ListNode *)malloc(sizeof(ListNode));
	p->data = value;
	p->link = head;
	head = p;
	return head;
}
void print_list(ListNode *head) {
	for (ListNode *p = head; p != NULL; p = p->link) {
		printf("%d->", p->data);
	}
	printf("NULL\n");
}
ListNode *concat_list(ListNode *head1, ListNode *head2) {
	if (head1 == NULL)
		return head2;
	else if (head2 == NULL)
		return head1;
	else {
		ListNode *p;
		p = head1;
		while (p->link != NULL) {//head는 앞에 노드를 가르키고있는거임 + 마지막 노드를 가르키고 마지막노드의 링크 필드까지는 
			p = p->link;
		}
		p->link = head2;
		return head1;
	}
}
int main(void) {
	ListNode *head1 = NULL;
	ListNode *head2 = NULL;
	ListNode *total =NULL;

	head1 = insert_first(head1, 10);
	head1 = insert_first(head1, 20);
	head1 = insert_first(head1, 30);
	print_list(head1);

	head2 = insert_first(head2, 40);
	head2 = insert_first(head2, 50);
	print_list(head2); 

	total = concat_list(head1, head2);
	print_list(total);
}
